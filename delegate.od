# redo requests in the output dir all fall back to $OUT/default.do, which
# simply sets $SRCDIR and then runs this file.
#
# Our job is then to delegate the work the right .do file inside $SRCDIR,
# if any.
export OUT=$PWD
x1=$1
x2=$2
x3=$PWD/$3
ofile=$PWD/$3
cd "$SRCDIR"
export SRCDIR
export ROOT=$PWD
export prelude=$ROOT/prelude.od
. "$prelude"

delegate_to_dofile() {
    dopath="$1"
    dofile=${dopath##*/}
    dodir=${dopath%$dofile}
    dodir=${dodir%/}
    
    if is_do_dir "$dodir"; then
        wd="${dodir%${dodir##*/}}"
    else
        wd="$dodir"
    fi

    test -n "$wd" && cd "$wd"

    x1_rel=${x1#$wd}
    ext="$(get_do_ext "$dofile")"
    x2_rel=${x1#$wd}
    x2_rel=${x2_rel%$ext}
    dodir_rel=${dodir#$wd}/
    dodir_rel=${dodir_rel#/}

    set -- "$x1_rel" "$x2_rel" "$ofile"
    . "${dodir_rel}$dofile"
}

is_do_dir() {
    path=${1%/}
    test "${path##*/}" = "do"
    return
}

process_do_paths() {
    dopath=$1
    while read dopath; do
        ifcreate=
        if [ ! -e "$dopath" ]; then
            ifcreate="$ifcreate $dopath"
        else
            redo-ifcreate $ifcreate
            redo-ifchange "$dopath"
            delegate_to_dofile "$dopath"
            return
        fi
    done
}

get_do_paths "$x1" | process_do_paths