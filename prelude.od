die() {
    echo "$@"
    exit 1
}

check_globals() {
    test -n "$ROOT" || die "check_globals: need ROOT"
    test -n "$SRCDIR" || die "check_globals: need SCRDIR"
    test -n "$OUT" || die "check_globals: need OUT"
}

create_build_dir() {
    [ -d "$BUILD_DIR" ] || mkdir -p "$BUILD_DIR"
}

substitute() {
    echo "$1" | sed "s#$2#$3#g"
}

mydirname() {
    dir="${1%${1##*/}}"
    echo "${dir%/}"
}

get_do_ext() {
    ext=${1##*default}
    if [ "$ext" != "$1" ]; then
        echo ${ext%.do}
    else
        echo ''
    fi
}

get_do_exts() {
    cur=${1##*/}
    while true; do
        ext=${cur#*.}
        test $cur = $ext && break
        echo $ext.do
        cur=$ext
    done
    echo do
}

path_join() {
    test -n "$1" && echo "$1/$2" || echo "$2"
}

get_do_paths() {
    exts=`get_do_exts $1`
    p=$1
    name=${p##*/}
    dir=$(mydirname $p)
    path_join "${dir}" $name.do
    path_join "${dir}" do/$name.do

    while true; do
        for ext in $exts; do
            path_join "${dir}" default.$ext
            path_join "${dir}" do/default.$ext
        done
        
        p=$dir
        dir=$(mydirname $p)
        test "${p}" = "${dir}" && return
    done
}

abspath=`mydirname "$PWD/$2"`

redo-ifchange $prelude
check_globals
PATH_TO_ROOT=$(realpath --relative-to="$abspath" "$ROOT")
PATH_FROM_ROOT=$(realpath --relative-to="$ROOT" "$abspath")
BUILD_DIR="$OUT/$PATH_FROM_ROOT"
create_build_dir
